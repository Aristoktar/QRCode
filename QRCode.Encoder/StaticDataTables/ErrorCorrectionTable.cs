using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace QRCode.Encoder.StaticDataTables {
	public static class ErrorCorrectionTable {
		/*version,
		 * level,(datatype)
		 * Total Number of Data Codewords for this Version and EC Level,(var1)
		 * EC Codewords Per Block,                                      (var2)
		 * Number of Blocks in Group 1,                                 (var3)
		 * Number of Data Codewords in Each of Group 1's Blocks         (var4)
		 * Number of Blocks in Group 2                                  (var5)
		 * Number of Data Codewords in Each of Group 2's Blocks         (var6)
		 * 
		 */

		public static int[,] table = { 
{ 1, 0, 19, 7, 1, 19, 0 ,  0 },
{ 1, 1, 16, 10, 1, 16, 0 ,  0 },
{ 1, 2, 13, 13, 1, 13, 0 ,  0 },
{ 1, 3, 9, 17, 1, 9, 0 ,  0 },
{ 2, 0, 34, 10, 1, 34, 0 ,  0 },
{ 2, 1, 28, 16, 1, 28, 0 ,  0 },
{ 2, 2, 22, 22, 1, 22, 0 ,  0 },
{ 2, 3, 16, 28, 1, 16, 0 ,  0 },
{ 3, 0, 55, 15, 1, 55, 0 ,  0 },
{ 3, 1, 44, 26, 1, 44, 0 ,  0 },
{ 3, 2, 34, 18, 2, 17, 0 ,  0 },
{ 3, 3, 26, 22, 2, 13, 0 ,  0 },
{ 4, 0, 80, 20, 1, 80, 0 ,  0 },
{ 4, 1, 64, 18, 2, 32, 0 ,  0 },
{ 4, 2, 48, 26, 2, 24, 0 ,  0 },
{ 4, 3, 36, 16, 4, 9, 0 ,  0 },
{ 5, 0, 108, 26, 1, 108, 0 ,  0 },
{ 5, 1, 86, 24, 2, 43, 0 ,  0 },
{ 5, 2, 62, 18, 2, 15, 2, 16 },
{ 5, 3, 46, 22, 2, 11, 2, 12 },
{ 6, 0, 136, 18, 2, 68, 0 ,  0 },
{ 6, 1, 108, 16, 4, 27, 0 ,  0 },
{ 6, 2, 76, 24, 4, 19, 0 ,  0 },
{ 6, 3, 60, 28, 4, 15, 0 ,  0 },
{ 7, 0, 156, 20, 2, 78, 0 ,  0 },
{ 7, 1, 124, 18, 4, 31, 0 ,  0 },
{ 7, 2, 88, 18, 2, 14, 4, 15 },
{ 7, 3, 66, 26, 4, 13, 1, 14 },
{ 8, 0, 194, 24, 2, 97, 0 ,  0 },
{ 8, 1, 154, 22, 2, 38, 2, 39 },
{ 8, 2, 110, 22, 4, 18, 2, 19 },
{ 8, 3, 86, 26, 4, 14, 2, 15 },
{ 9, 0, 232, 30, 2, 116, 0 ,  0 },
{ 9, 1, 182, 22, 3, 36, 2, 37 },
{ 9, 2, 132, 20, 4, 16, 4, 17 },
{ 9, 3, 100, 24, 4, 12, 4, 13 },
{ 10, 0, 274, 18, 2, 68, 2, 69 },
{ 10, 1, 216, 26, 4, 43, 1, 44 },
{ 10, 2, 154, 24, 6, 19, 2, 20 },
{ 10, 3, 122, 28, 6, 15, 2, 16 },
{ 11, 0, 324, 20, 4, 81, 0 ,  0 },
{ 11, 1, 254, 30, 1, 50, 4, 51 },
{ 11, 2, 180, 28, 4, 22, 4, 23 },
{ 11, 3, 140, 24, 3, 12, 8, 13 },
{ 12, 0, 370, 24, 2, 92, 2, 93 },
{ 12, 1, 290, 22, 6, 36, 2, 37 },
{ 12, 2, 206, 26, 4, 20, 6, 21 },
{ 12, 3, 158, 28, 7, 14, 4, 15 },
{ 13, 0, 428, 26, 4, 107, 0 ,  0 },
{ 13, 1, 334, 22, 8, 37, 1, 38 },
{ 13, 2, 244, 24, 8, 20, 4, 21 },
{ 13, 3, 180, 22, 12, 11, 4, 12 },
{ 14, 0, 461, 30, 3, 115, 1, 116 },
{ 14, 1, 365, 24, 4, 40, 5, 41 },
{ 14, 2, 261, 20, 11, 16, 5, 17 },
{ 14, 3, 197, 24, 11, 12, 5, 13 },
{ 15, 0, 523, 22, 5, 87, 1, 88 },
{ 15, 1, 415, 24, 5, 41, 5, 42 },
{ 15, 2, 295, 30, 5, 24, 7, 25 },
{ 15, 3, 223, 24, 11, 12, 7, 13 },
{ 16, 0, 589, 24, 5, 98, 1, 99 },
{ 16, 1, 453, 28, 7, 45, 3, 46 },
{ 16, 2, 325, 24, 15, 19, 2, 20 },
{ 16, 3, 253, 30, 3, 15, 13, 16 },
{ 17, 0, 647, 28, 1, 107, 5, 108 },
{ 17, 1, 507, 28, 10, 46, 1, 47 },
{ 17, 2, 367, 28, 1, 22, 15, 23 },
{ 17, 3, 283, 28, 2, 14, 17, 15 },
{ 18, 0, 721, 30, 5, 120, 1, 121 },
{ 18, 1, 563, 26, 9, 43, 4, 44 },
{ 18, 2, 397, 28, 17, 22, 1, 23 },
{ 18, 3, 313, 28, 2, 14, 19, 15 },
{ 19, 0, 795, 28, 3, 113, 4, 114 },
{ 19, 1, 627, 26, 3, 44, 11, 45 },
{ 19, 2, 445, 26, 17, 21, 4, 22 },
{ 19, 3, 341, 26, 9, 13, 16, 14 },
{ 20, 0, 861, 28, 3, 107, 5, 108 },
{ 20, 1, 669, 26, 3, 41, 13, 42 },
{ 20, 2, 485, 30, 15, 24, 5, 25 },
{ 20, 3, 385, 28, 15, 15, 10, 16 },
{ 21, 0, 932, 28, 4, 116, 4, 117 },
{ 21, 1, 714, 26, 17, 42, 0 ,  0 },
{ 21, 2, 512, 28, 17, 22, 6, 23 },
{ 21, 3, 406, 30, 19, 16, 6, 17 },
{ 22, 0, 1006, 28, 2, 111, 7, 112 },
{ 22, 1, 782, 28, 17, 46, 0 ,  0 },
{ 22, 2, 568, 30, 7, 24, 16, 25 },
{ 22, 3, 442, 24, 34, 13, 0 ,  0 },
{ 23, 0, 1094, 30, 4, 121, 5, 122 },
{ 23, 1, 860, 28, 4, 47, 14, 48 },
{ 23, 2, 614, 30, 11, 24, 14, 25 },
{ 23, 3, 464, 30, 16, 15, 14, 16 },
{ 24, 0, 1174, 30, 6, 117, 4, 118 },
{ 24, 1, 914, 28, 6, 45, 14, 46 },
{ 24, 2, 664, 30, 11, 24, 16, 25 },
{ 24, 3, 514, 30, 30, 16, 2, 17 },
{ 25, 0, 1276, 26, 8, 106, 4, 107 },
{ 25, 1, 1000, 28, 8, 47, 13, 48 },
{ 25, 2, 718, 30, 7, 24, 22, 25 },
{ 25, 3, 538, 30, 22, 15, 13, 16 },
{ 26, 0, 1370, 28, 10, 114, 2, 115 },
{ 26, 1, 1062, 28, 19, 46, 4, 47 },
{ 26, 2, 754, 28, 28, 22, 6, 23 },
{ 26, 3, 596, 30, 33, 16, 4, 17 },
{ 27, 0, 1468, 30, 8, 122, 4, 123 },
{ 27, 1, 1128, 28, 22, 45, 3, 46 },
{ 27, 2, 808, 30, 8, 23, 26, 24 },
{ 27, 3, 628, 30, 12, 15, 28, 16 },
{ 28, 0, 1531, 30, 3, 117, 10, 118 },
{ 28, 1, 1193, 28, 3, 45, 23, 46 },
{ 28, 2, 871, 30, 4, 24, 31, 25 },
{ 28, 3, 661, 30, 11, 15, 31, 16 },
{ 29, 0, 1631, 30, 7, 116, 7, 117 },
{ 29, 1, 1267, 28, 21, 45, 7, 46 },
{ 29, 2, 911, 30, 1, 23, 37, 24 },
{ 29, 3, 701, 30, 19, 15, 26, 16 },
{ 30, 0, 1735, 30, 5, 115, 10, 116 },
{ 30, 1, 1373, 28, 19, 47, 10, 48 },
{ 30, 2, 985, 30, 15, 24, 25, 25 },
{ 30, 3, 745, 30, 23, 15, 25, 16 },
{ 31, 0, 1843, 30, 13, 115, 3, 116 },
{ 31, 1, 1455, 28, 2, 46, 29, 47 },
{ 31, 2, 1033, 30, 42, 24, 1, 25 },
{ 31, 3, 793, 30, 23, 15, 28, 16 },
{ 32, 0, 1955, 30, 17, 115, 0 ,  0 },
{ 32, 1, 1541, 28, 10, 46, 23, 47 },
{ 32, 2, 1115, 30, 10, 24, 35, 25 },
{ 32, 3, 845, 30, 19, 15, 35, 16 },
{ 33, 0, 2071, 30, 17, 115, 1, 116 },
{ 33, 1, 1631, 28, 14, 46, 21, 47 },
{ 33, 2, 1171, 30, 29, 24, 19, 25 },
{ 33, 3, 901, 30, 11, 15, 46, 16 },
{ 34, 0, 2191, 30, 13, 115, 6, 116 },
{ 34, 1, 1725, 28, 14, 46, 23, 47 },
{ 34, 2, 1231, 30, 44, 24, 7, 25 },
{ 34, 3, 961, 30, 59, 16, 1, 17 },
{ 35, 0, 2306, 30, 12, 121, 7, 122 },
{ 35, 1, 1812, 28, 12, 47, 26, 48 },
{ 35, 2, 1286, 30, 39, 24, 14, 25 },
{ 35, 3, 986, 30, 22, 15, 41, 16 },
{ 36, 0, 2434, 30, 6, 121, 14, 122 },
{ 36, 1, 1914, 28, 6, 47, 34, 48 },
{ 36, 2, 1354, 30, 46, 24, 10, 25 },
{ 36, 3, 1054, 30, 2, 15, 64, 16 },
{ 37, 0, 2566, 30, 17, 122, 4, 123 },
{ 37, 1, 1992, 28, 29, 46, 14, 47 },
{ 37, 2, 1426, 30, 49, 24, 10, 25 },
{ 37, 3, 1096, 30, 24, 15, 46, 16 },
{ 38, 0, 2702, 30, 4, 122, 18, 123 },
{ 38, 1, 2102, 28, 13, 46, 32, 47 },
{ 38, 2, 1502, 30, 48, 24, 14, 25 },
{ 38, 3, 1142, 30, 42, 15, 32, 16 },
{ 39, 0, 2812, 30, 20, 117, 4, 118 },
{ 39, 1, 2216, 28, 40, 47, 7, 48 },
{ 39, 2, 1582, 30, 43, 24, 22, 25 },
{ 39, 3, 1222, 30, 10, 15, 67, 16 },
{ 40, 0, 2956, 30, 19, 118, 6, 119 },
{ 40, 1, 2334, 28, 18, 47, 31, 48 },
{ 40, 2, 1666, 30, 34, 24, 34, 25 },
{ 40, 3, 1276, 30, 20, 15, 61, 16 }
                                        };
		public static int getTotalDataCodeBits ( int errCorrection , int version ) {
			version--;
			//total = (var4*var3 + var6*var5) * 8 bit;
			int ans = table[version * 4 + errCorrection , 5] * table[version * 4 + errCorrection , 4]
					+ table[version * 4 + errCorrection , 7] * table[version * 4 + errCorrection , 6];
			return ans * 8;

		}
		public static int GetErrorCorrectionCodewordsPerBlock ( ErrorCorrectionLvl errorCorrectionLvl , int version ) {
			version--;
			return table[version * 4 + (int)errorCorrectionLvl , 3];
		}

		public static int GetNumOfBlocksInGroup1(ErrorCorrectionLvl errorCorrectionLvl, int version)
		{
			version--;
			return table[version * 4 + (int)errorCorrectionLvl , 4];
		}

		public static int GetNumOfBlocksInGroup2 ( ErrorCorrectionLvl errorCorrectionLvl , int version ) {
			version--;
			return table[version * 4 + (int) errorCorrectionLvl , 6];
		}

		public static int GetNumOfCodeWordsInBlocksInGroup1 ( ErrorCorrectionLvl errorCorrectionLvl , int version ) {
			version--;
			return table[version * 4 + (int) errorCorrectionLvl , 5];
		}

		public static int GetNumOfCodeWordsInBlocksInGroup2 ( ErrorCorrectionLvl errorCorrectionLvl , int version ) {
			version--;
			return table[version * 4 + (int) errorCorrectionLvl , 7];
		}
		
	}
}
